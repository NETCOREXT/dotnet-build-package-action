name: 'Build Package'
description: 'Build dotnet package'

inputs:
  app:
    required: true
    description: "App Name"
  src:
    required: true
    description: "Source path"
    default: "src"
  nuget-api-url:
    description: "NuGet URL"
  nuget-api-key:
    description: 'NuGet API key'
  artifact:
    description: "Artifact Name"
  branch-production:
    description: "Production Branch"
    default: "main"
  branch-staging:
    description: "Staging Branch"
    default: "stg"
  branch-development:
    description: "Development Branch"
    default: "dev"
outputs:
  artifact:
    description: "Artifact Name"
    value: ${{ steps.upload-artifact.outputs.artifact }}
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: actions/download-artifact@v3
      if: inputs.artifact != ''
      with:
        name: ${{ inputs.artifact }}
        path: ${{ inputs.src }}
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Add NuGet Source
      shell: bash
      if: inputs.nuget-api-url != '' && inputs.nuget-api-key != ''
      run: dotnet nuget add source --username USERNAME --password ${{ inputs.nuget-api-key }} --store-password-in-clear-text --name nuget-${{ github.run_id }} "${{ inputs.nuget-api-url }}"
    - name: Build Package
      id: build
      shell: bash
      run: |
        APP="${{ inputs.app }}"

        COMMIT_SHORT_SHA=`git rev-parse --short ${GITHUB_SHA}`
        COMMIT_COUNT=`git rev-list --count HEAD`
        COMMIT_TIME=`git show -s --format=%ct HEAD`
        ADDITIONAL_ARGUMENTS="-c Debug --version-suffix ${GITHUB_REF_NAME}.${COMMIT_TIME}+${COMMIT_SHORT_SHA}"

        if [ "$GITHUB_REF_NAME" = "${{ inputs.branch-production }}" ]; then
          ADDITIONAL_ARGUMENTS="-c Release"
        fi

        PROJECT_PATH=`find ${{ inputs.src }} -type f -iname "${APP}.csproj"`

        dotnet pack $PROJECT_PATH $ADDITIONAL_ARGUMENTS

        echo "short-sha=$COMMIT_SHORT_SHA" >> $GITHUB_OUTPUT
    - name: Find Package
      shell: bash
      run: |
        mkdir -p ./packages
        find ** -type f -regex '.*\.s?nupkg' -exec mv {} ./packages/ \;
    - uses: actions/upload-artifact@v3
      name: Upload packages to artifact
      id: upload-artifact
      with:
        name: packages-${{ steps.build.outputs.short-sha }}
        path: ./packages
    - name: Set Outputs
      shell: bash
      run: echo "artifact=packages-${{ steps.build.outputs.short-sha }}" >> $GITHUB_OUTPUT